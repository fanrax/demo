{"version":3,"sources":["pages/login/login.js","pages/content/one/index.js","pages/content/two/index.js","pages/content/three/index.js","pages/index/index.js","App.js","serviceWorker.js","index.js","utils/fetch_api.js"],"names":["Login","state","username","password","login","_this","data","name","fetch","method","body","JSON","stringify","headers","Headers","Content-Type","then","res","console","log","message","info","success","window","localStorage","islogin","props","history","push","pathname","handleChange","e","setState","target","value","handleChangePass","this","react_default","a","createElement","es_form","className","Item","input","onChange","style","width","prefix","icon","type","color","placeholder","es_button","onClick","htmlType","React","Component","Onepage","rowSelection","selectedRowKeys","selectedRows","concat","columns","title","dataIndex","_this2","map","item","key","id","table","dataSource","withRouter","Twopage","ThreePage","Header","Layout","Sider","Content","Index","collapsed","toggle","layout","trigger","collapsible","menu","theme","mode","defaultSelectedKeys","react_router_dom","to","background","padding","margin","minHeight","react_router","exact","path","component","one","two","three","App","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","url","json","catch","err"],"mappings":"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","file":"static/js/main.4fa66b37.chunk.js","sourcesContent":["import React from \"react\"\r\nimport fetch from \"../../utils/fetch_api\"\r\nimport \"./login.css\"\r\nimport { Form, Icon, Input, Button, message } from 'antd';\r\nclass Login extends React.Component {\r\n  state = {\r\n      username:\"\",\r\n      password:\"\"\r\n  }\r\n  componentDidMount(){\r\n    if(window.localStorage.islogin){\r\n      this.props.history.push({\r\n        pathname:\"index\"\r\n      })\r\n    }else{\r\n      return\r\n    }\r\n  }\r\n  login=()=>{\r\n    if(!this.state.username){\r\n      message.info(\"用户名为空，请输入\")\r\n      return\r\n    }\r\n    if(!this.state.password){\r\n      message.info(\"密码为空，请输入\")\r\n      return\r\n    }\r\n    let data = {\r\n      name:this.state.username,\r\n      password:this.state.password\r\n    }\r\n    fetch(\"login\",{\r\n      method:\"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    }).then((res)=>{\r\n      console.log(res)\r\n      message.info(res.message)\r\n      if(res.success){\r\n        window.localStorage.islogin = true\r\n        this.props.history.push({\r\n          pathname:\"index\"\r\n        })\r\n      }else{\r\n        return\r\n      }\r\n\r\n    })\r\n  }\r\n  handleChange=(e)=>{\r\n    this.setState({\r\n      username:e.target.value\r\n    })\r\n  }\r\n  handleChangePass=(e)=>{\r\n    this.setState({\r\n      password:e.target.value\r\n    })\r\n  }\r\n  //组件化这么写\r\n  // comreturn(){\r\n  //   return(<div>\r\n  //     dabsdjkabdkabskdbaskbdkasbdkbasd\r\n  //   </div>)\r\n  // }\r\n  render(){\r\n    return(<div>\r\n      {/* {this.comreturn()} */}\r\n      <Form className=\"login-form\">\r\n        <Form.Item>\r\n          <Input\r\n            onChange={this.handleChange}\r\n            value={this.state.username}\r\n            style={{width:\"500px\"}}\r\n            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n            placeholder=\"Username\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Input\r\n            onChange={this.handleChangePass}\r\n            value={this.state.password}\r\n            style={{width:\"500px\"}}\r\n            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" onClick={this.login} htmlType=\"submit\" className=\"login-form-button\">\r\n            Log in\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>)\r\n  }\r\n}\r\nexport default Login","import React from \"react\"\r\nimport fetch from \"../../../utils/fetch_api\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { Table } from 'antd';\r\nimport \"./index.css\"\r\n\r\n\r\n\r\n\r\nclass Onepage extends React.Component {\r\n  // rowSelection object indicates the need for row selection\r\n  rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n    },\r\n  };\r\n  columns = [\r\n    {\r\n      title: 'Title',\r\n      dataIndex: 'title'\r\n    },\r\n    {\r\n      title: 'Id',\r\n      dataIndex: 'id',\r\n    },\r\n    {\r\n      title: 'Url',\r\n      dataIndex: 'url',\r\n    },\r\n    {\r\n      title: 'Cover',\r\n      dataIndex: 'cover',\r\n    }\r\n  ]\r\n  state={\r\n    data:[]\r\n  }\r\n  componentDidMount(){\r\n    fetch(\"list\").then((res)=>{\r\n      res.map((item)=>{\r\n        item.key = item.id\r\n        return item\r\n      })\r\n      this.setState({\r\n        data:res\r\n      })\r\n    })\r\n  }\r\n  render(){\r\n    return(<div>\r\n      <Table rowSelection={this.rowSelection} columns={this.columns} dataSource={this.state.data} />\r\n    </div>)\r\n  }\r\n}\r\nexport default withRouter(Onepage)","import React from \"react\"\r\nimport \"./index.css\"\r\nimport { withRouter } from \"react-router-dom\"\r\nclass Twopage extends React.Component {\r\n  render(){\r\n    return(<div>\r\n      Twopage\r\n    </div>)\r\n  }\r\n}\r\nexport default withRouter(Twopage)","import React from \"react\"\r\nimport \"./index.css\"\r\nimport { withRouter } from \"react-router-dom\"\r\nclass ThreePage extends React.Component {\r\n  render(){\r\n    return(<div>\r\n      pagethree\r\n    </div>)\r\n  }\r\n}\r\nexport default withRouter(ThreePage)","import React from \"react\"\r\n// import fetch from \"../../utils/fetch_api\"\r\nimport { withRouter, Route, Link } from 'react-router-dom';\r\nimport \"./index.css\"\r\nimport one from \"../content/one/index\"\r\nimport two from \"../content/two/index\"\r\nimport three from \"../content/three/index\"\r\nimport { Layout, Menu, Icon } from 'antd';\r\nconst { Header, Sider, Content } = Layout;\r\nclass Index extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n  render(){\r\n    return(<Layout>\r\n      <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\r\n        <div className=\"logo\" />\r\n        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n          <Menu.Item key=\"1\">\r\n            <Link to=\"/index/one\">\r\n              <Icon type=\"user\" />\r\n              <span>Gay love area</span>\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\">\r\n            <Link to=\"/index/two\">\r\n              <Icon type=\"video-camera\" />\r\n              <span>Wrestling area</span>\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"3\">\r\n            <Link to=\"/index/three\">\r\n              <Icon type=\"upload\" />\r\n              <span>Philosophy area</span>\r\n            </Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout>\r\n        <Header style={{ background: '#fff', padding: 0 }}>\r\n          <Icon\r\n            className=\"trigger\"\r\n            type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n            onClick={this.toggle}\r\n          />\r\n        </Header>\r\n        <Content style={{margin: '24px 16px',padding: 24,background: '#fff',minHeight: 280,}}>\r\n          <Route exact path=\"/index\" component={one} />\r\n          <Route path=\"/index/one\" component={one} />\r\n          <Route path=\"/index/two\" component={two} />\r\n          <Route path=\"/index/three\" component={three} />\r\n        </Content>\r\n      </Layout>\r\n    </Layout>)\r\n  }\r\n}\r\nexport default withRouter(Index)","import React, { Component } from 'react';\nimport './App.css';\nimport Login from \"../src/pages/login/login\"\nimport Index from \"../src/pages/index/index\"\nimport { BrowserRouter as Router , Route} from \"react-router-dom\";\n\nclass App extends Component {\n  componentDidMount() {\n\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <div>\n            <Route exact path=\"/\" component={Login} />\n            <Route path=\"/index\" component={Index} />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// React.prototype.fetch = Fetch\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\r\nfunction myFetch (url,body) {\r\n  return fetch(\"http://127.0.0.1:2333/\"+url,body)\r\n  .then((res)=>{\r\n    return res.json()\r\n  }).then((res)=>{\r\n    return res\r\n  }).catch((err)=>{\r\n    return err\r\n  })\r\n}\r\nmodule.exports = myFetch"],"sourceRoot":""}